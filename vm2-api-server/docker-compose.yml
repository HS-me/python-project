version: "3"

services:
  api-server:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis-service.cluster.local
      - REDIS_PORT=6379
      - KAFKA_BOOTSTRAP_SERVERS=kafka-service.cluster.local:9092
    depends_on:
      - redis
      - kafka
    restart: on-failure
    dns:
      - 172.16.1.16  # VM1의 DNSmasq 서버
    networks:
      - voting-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - voting-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - voting-network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-service.cluster.local:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    dns:
      - 172.16.1.16  # VM1의 DNSmasq 서버
    networks:
      - voting-network

networks:
  voting-network:
    driver: bridge
    name: voting-system-network 